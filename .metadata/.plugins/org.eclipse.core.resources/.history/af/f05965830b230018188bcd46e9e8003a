import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.net.ServerSocket;
import java.net.Socket;

public class Server
{

    private static Socket socket;

    public static void main(String[] args)
    {
        try
        {

            int port = 19999;
            ServerSocket serverSocket = new ServerSocket(port);
            System.out.println("Server Started and listening to the port 19999");

            //Server is running always. This is done using this while(true) loop
            while(true)
            {
            	System.out.println("hehe");
                //Reading the message from the client
                socket = serverSocket.accept();
                InputStream is = socket.getInputStream();
                InputStreamReader isr = new InputStreamReader(is);
                BufferedReader br = new BufferedReader(isr);
                String request = br.readLine();
                System.out.println("Message received from client is "+request);


                String version = request.charAt(0) + "";
                String opcode = request.charAt(1) + "";
                String offset = request.substring(2,6) ;
                String fileID = request.substring(6,10) ;
                String oldChecksum = request.substring(10,84) ;
                String filename = request.substring(84, request.length()) ;
                System.out.println(filename);
                int charCode = Integer.parseInt(filename, 2);
                filename = new Character((char)charCode).toString();

                FileReader fr = new FileReader(filename);
                BufferedReader br1 = new BufferedReader(fr);
                
                int c;
                char var;
                int count =0;
                String returnMessage = "";
                boolean read = false;
                while((c = br1.read()) != -1){
                	var = (char)c;
                	if(count == Integer.parseInt(offset))
                		read = true;
                	
                	if(count == Integer.parseInt(offset) + 512){
                		read = false;
                		returnMessage += var;
                		break;
                	}
                	
                	if(read)
                		returnMessage += var;
                }
                
                OutputStream os = socket.getOutputStream();
                OutputStreamWriter osw = new OutputStreamWriter(os);
                BufferedWriter bw = new BufferedWriter(osw);

                try
                {
                    bw.write(returnMessage + "\n");
                    System.out.println("Message sent to the client is "+returnMessage);
                }
                catch(Exception e){}

            }
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
        finally
        {
            try
            {
                socket.close();
            }
            catch(Exception e){}
        }
    }
    
    public static String convertBinaryStringToString(String string){
        StringBuilder sb = new StringBuilder();
        char[] chars = string.replaceAll("\\s", "").toCharArray();
        int [] mapping = {1,2,4,8,16,32,64,128};

        for (int j = 0; j < chars.length; j+=8) {
            int idx = 0;
            int sum = 0;
            for (int i = 7; i>= 0; i--) {
                if (chars[i+j] == '1') {
                    sum += mapping[idx];
                }
                idx++;
            }
            System.out.println(sum);//debug
            sb.append(Character.toChars(sum));
        }
        return sb.toString();
    }
}